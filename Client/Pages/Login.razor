@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider

Please log in below or <NavLink href="register">register</NavLink> for a new account.

<EditForm Model="_userLogin" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="username">User Name</label>
        <div>
            <InputText id="username" class="form-control" @bind-Value="_userLogin.UserName"/>
        </div>
        <ValidationMessage For="@(() => _userLogin.UserName)"/>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <div>
            <InputText type="password" id="password" class="form-control" @bind-Value="_userLogin.Password"/>
        </div>
        <ValidationMessage For="@(() => _userLogin.Password)"/>
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
    <ValidationSummary/>
</EditForm>

@code {
    private readonly UserLogin _userLogin = new();

    private async Task HandleLogin()
    {
        // We'll store that the user is authenticated
        await LocalStorageService.SetItemAsync<bool>("isAuthenticated", true);
        // 
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }
}